2019-06-05 18:52:41,851 - INFO - Mode selected (TEST)
2019-06-05 18:52:41,883 - DEBUG - CACHEDIR=C:\Users\Jack\.matplotlib
2019-06-05 18:52:41,885 - DEBUG - Using fontManager instance from C:\Users\Jack\.matplotlib\fontList.json
2019-06-05 18:52:42,142 - DEBUG - backend module://backend_interagg version unknown
2019-06-05 18:52:42,145 - INFO - Evaluator initialized...
2019-06-05 18:52:42,145 - INFO - RE list created for evaluator: {re.compile('quit$'): 'quit()', re.compile('set [a-zA-Z] = ((0)|(-{0,1}[1-9][0-9]*))$'): 'assign()', re.compile('vars$'): 'show_vars()', re.compile('run [a-zA-Z]+\\.txt$'): 'run()', re.compile('count$'): 'count_cmds()', re.compile('def [a-zA-Z] = [0-9a-zA-Z\\+\\-\\/\\^\\* ]+$'): 'define_func()', re.compile('[a-zA-Z]\\(((0)|(-{0,1}[1-9][0-9]*))\\)$'): 'evaluate_at()', re.compile('lag [a-zA-Z]: \\[([0-9]+,)+[0-9]+\\],\\[([0-9]+,)+[0-9]+\\]'): 'lagrange()'}
2019-06-05 18:52:42,146 - INFO - Console initialized... prompt set to '>>'
2019-06-05 18:52:42,146 - DEBUG - run called on file: test.txt
2019-06-05 18:52:42,146 - DEBUG - re.compile('quit$')
2019-06-05 18:52:42,146 - DEBUG - re.compile('set [a-zA-Z] = ((0)|(-{0,1}[1-9][0-9]*))$')
2019-06-05 18:52:42,146 - DEBUG - re.compile('vars$')
2019-06-05 18:52:42,146 - DEBUG - Match found: <_sre.SRE_Match object; span=(0, 4), match='vars'>
2019-06-05 18:52:42,146 - DEBUG - CALLING self.show_vars()
2019-06-05 18:52:42,146 - DEBUG - vars called
2019-06-05 18:52:42,146 - INFO - {}
2019-06-05 18:52:42,146 - DEBUG - re.compile('quit$')
2019-06-05 18:52:42,146 - DEBUG - re.compile('set [a-zA-Z] = ((0)|(-{0,1}[1-9][0-9]*))$')
2019-06-05 18:52:42,146 - DEBUG - Match found: <_sre.SRE_Match object; span=(0, 9), match='set x = 1'>
2019-06-05 18:52:42,146 - DEBUG - CALLING self.assign()
2019-06-05 18:52:42,146 - DEBUG - assign called
2019-06-05 18:52:42,146 - INFO - set variable 'x' to 1
2019-06-05 18:52:42,146 - DEBUG - re.compile('quit$')
2019-06-05 18:52:42,146 - DEBUG - re.compile('set [a-zA-Z] = ((0)|(-{0,1}[1-9][0-9]*))$')
2019-06-05 18:52:42,147 - DEBUG - Match found: <_sre.SRE_Match object; span=(0, 9), match='set y = 2'>
2019-06-05 18:52:42,147 - DEBUG - CALLING self.assign()
2019-06-05 18:52:42,147 - DEBUG - assign called
2019-06-05 18:52:42,147 - INFO - set variable 'y' to 2
2019-06-05 18:52:42,147 - DEBUG - re.compile('quit$')
2019-06-05 18:52:42,147 - DEBUG - re.compile('set [a-zA-Z] = ((0)|(-{0,1}[1-9][0-9]*))$')
2019-06-05 18:52:42,147 - DEBUG - Match found: <_sre.SRE_Match object; span=(0, 9), match='set z = 3'>
2019-06-05 18:52:42,147 - DEBUG - CALLING self.assign()
2019-06-05 18:52:42,147 - DEBUG - assign called
2019-06-05 18:52:42,147 - INFO - set variable 'z' to 3
2019-06-05 18:52:42,147 - DEBUG - re.compile('quit$')
2019-06-05 18:52:42,147 - DEBUG - re.compile('set [a-zA-Z] = ((0)|(-{0,1}[1-9][0-9]*))$')
2019-06-05 18:52:42,147 - DEBUG - re.compile('vars$')
2019-06-05 18:52:42,147 - DEBUG - Match found: <_sre.SRE_Match object; span=(0, 4), match='vars'>
2019-06-05 18:52:42,147 - DEBUG - CALLING self.show_vars()
2019-06-05 18:52:42,147 - DEBUG - vars called
2019-06-05 18:52:42,147 - INFO - {'x': 1, 'y': 2, 'z': 3}
2019-06-05 18:52:42,147 - DEBUG - re.compile('quit$')
2019-06-05 18:52:42,147 - DEBUG - re.compile('set [a-zA-Z] = ((0)|(-{0,1}[1-9][0-9]*))$')
2019-06-05 18:52:42,147 - DEBUG - re.compile('vars$')
2019-06-05 18:52:42,147 - DEBUG - re.compile('run [a-zA-Z]+\\.txt$')
2019-06-05 18:52:42,148 - DEBUG - re.compile('count$')
2019-06-05 18:52:42,148 - DEBUG - re.compile('def [a-zA-Z] = [0-9a-zA-Z\\+\\-\\/\\^\\* ]+$')
2019-06-05 18:52:42,148 - DEBUG - Match found: <_sre.SRE_Match object; span=(0, 9), match='def f = x'>
2019-06-05 18:52:42,148 - DEBUG - CALLING self.define_func()
2019-06-05 18:52:42,148 - DEBUG - attempting to define function 'x'
2019-06-05 18:52:42,148 - DEBUG - char set for function: {'x'}
2019-06-05 18:52:42,148 - DEBUG - re.compile('quit$')
2019-06-05 18:52:42,148 - DEBUG - re.compile('set [a-zA-Z] = ((0)|(-{0,1}[1-9][0-9]*))$')
2019-06-05 18:52:42,148 - DEBUG - re.compile('vars$')
2019-06-05 18:52:42,148 - DEBUG - re.compile('run [a-zA-Z]+\\.txt$')
2019-06-05 18:52:42,148 - DEBUG - re.compile('count$')
2019-06-05 18:52:42,148 - DEBUG - re.compile('def [a-zA-Z] = [0-9a-zA-Z\\+\\-\\/\\^\\* ]+$')
2019-06-05 18:52:42,148 - DEBUG - Match found: <_sre.SRE_Match object; span=(0, 11), match='def h = x^2'>
2019-06-05 18:52:42,148 - DEBUG - CALLING self.define_func()
2019-06-05 18:52:42,148 - DEBUG - attempting to define function 'x^2'
2019-06-05 18:52:42,148 - DEBUG - char set for function: {'x'}
2019-06-05 18:52:42,148 - DEBUG - re.compile('quit$')
2019-06-05 18:52:42,148 - DEBUG - re.compile('set [a-zA-Z] = ((0)|(-{0,1}[1-9][0-9]*))$')
2019-06-05 18:52:42,148 - DEBUG - re.compile('vars$')
2019-06-05 18:52:42,149 - DEBUG - Match found: <_sre.SRE_Match object; span=(0, 4), match='vars'>
2019-06-05 18:52:42,149 - DEBUG - CALLING self.show_vars()
2019-06-05 18:52:42,149 - DEBUG - vars called
2019-06-05 18:52:42,149 - INFO - {'x': 1, 'y': 2, 'z': 3, 'f': x, 'h': x^2}
2019-06-05 18:52:42,149 - DEBUG - re.compile('quit$')
2019-06-05 18:52:42,149 - DEBUG - re.compile('set [a-zA-Z] = ((0)|(-{0,1}[1-9][0-9]*))$')
2019-06-05 18:52:42,149 - DEBUG - re.compile('vars$')
2019-06-05 18:52:42,149 - DEBUG - re.compile('run [a-zA-Z]+\\.txt$')
2019-06-05 18:52:42,149 - DEBUG - re.compile('count$')
2019-06-05 18:52:42,149 - DEBUG - re.compile('def [a-zA-Z] = [0-9a-zA-Z\\+\\-\\/\\^\\* ]+$')
2019-06-05 18:52:42,149 - DEBUG - re.compile('[a-zA-Z]\\(((0)|(-{0,1}[1-9][0-9]*))\\)$')
2019-06-05 18:52:42,149 - DEBUG - Match found: <_sre.SRE_Match object; span=(0, 4), match='f(1)'>
2019-06-05 18:52:42,149 - DEBUG - CALLING self.evaluate_at()
2019-06-05 18:52:42,149 - DEBUG - point evaluated at '1'
2019-06-05 18:52:42,149 - DEBUG - replaced function text: '1'
2019-06-05 18:52:42,149 - INFO - 1
2019-06-05 18:52:42,149 - INFO - 
2019-06-05 18:52:42,149 - INFO - 
2019-06-05 18:52:42,149 - DEBUG - re.compile('quit$')
2019-06-05 18:52:42,149 - DEBUG - re.compile('set [a-zA-Z] = ((0)|(-{0,1}[1-9][0-9]*))$')
2019-06-05 18:52:42,149 - DEBUG - re.compile('vars$')
2019-06-05 18:52:42,150 - DEBUG - re.compile('run [a-zA-Z]+\\.txt$')
2019-06-05 18:52:42,150 - DEBUG - re.compile('count$')
2019-06-05 18:52:42,150 - DEBUG - re.compile('def [a-zA-Z] = [0-9a-zA-Z\\+\\-\\/\\^\\* ]+$')
2019-06-05 18:52:42,150 - DEBUG - re.compile('[a-zA-Z]\\(((0)|(-{0,1}[1-9][0-9]*))\\)$')
2019-06-05 18:52:42,150 - DEBUG - Match found: <_sre.SRE_Match object; span=(0, 4), match='h(4)'>
2019-06-05 18:52:42,150 - DEBUG - CALLING self.evaluate_at()
2019-06-05 18:52:42,150 - DEBUG - point evaluated at '4'
2019-06-05 18:52:42,150 - DEBUG - replaced function text: '4**2'
2019-06-05 18:52:42,150 - INFO - 16
2019-06-05 18:52:42,150 - INFO - 
2019-06-05 18:52:42,150 - INFO - 
2019-06-05 18:52:42,150 - DEBUG - re.compile('quit$')
2019-06-05 18:52:42,150 - DEBUG - re.compile('set [a-zA-Z] = ((0)|(-{0,1}[1-9][0-9]*))$')
2019-06-05 18:52:42,150 - DEBUG - re.compile('vars$')
2019-06-05 18:52:42,150 - DEBUG - re.compile('run [a-zA-Z]+\\.txt$')
2019-06-05 18:52:42,150 - DEBUG - re.compile('count$')
2019-06-05 18:52:42,150 - DEBUG - re.compile('def [a-zA-Z] = [0-9a-zA-Z\\+\\-\\/\\^\\* ]+$')
2019-06-05 18:52:42,150 - DEBUG - re.compile('[a-zA-Z]\\(((0)|(-{0,1}[1-9][0-9]*))\\)$')
2019-06-05 18:52:42,150 - DEBUG - re.compile('lag [a-zA-Z]: \\[([0-9]+,)+[0-9]+\\],\\[([0-9]+,)+[0-9]+\\]')
2019-06-05 18:52:42,150 - DEBUG - Match found: <_sre.SRE_Match object; span=(0, 26), match='lag f: [0,1,2,3],[0,1,4,9]'>
2019-06-05 18:52:42,150 - DEBUG - CALLING self.lagrange()
2019-06-05 18:52:42,151 - INFO - lagrange called...
2019-06-05 18:52:42,151 - INFO - cmd: ['lag', 'f:', '[0,1,2,3],[0,1,4,9]']
2019-06-05 18:52:42,151 - DEBUG - [[0, 1, 2, 3], [0, 1, 4, 9]]
2019-06-05 18:52:42,151 - INFO - Lagrange Polynomial 'f'
2019-06-05 18:52:42,151 - INFO - Polylist generated: [[0, [0, 0], [0, 1], [0, 2], [0, 3]], [1, [1, 0], [1, 1], [1, 2], [1, 3]], [4, [2, 0], [2, 1], [2, 2], [2, 3]], [9, [3, 0], [3, 1], [3, 2], [3, 3]]]
2019-06-05 18:52:42,151 - DEBUG - re.compile('quit$')
2019-06-05 18:52:42,151 - DEBUG - Match found: <_sre.SRE_Match object; span=(0, 4), match='quit'>
2019-06-05 18:52:42,151 - DEBUG - CALLING self.quit()
2019-06-05 18:52:42,151 - DEBUG - quit called while running a file
